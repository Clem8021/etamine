<div class="modal-overlay" data-controller="modal" id="product-modal">
  <div class="modal-content">
    <%= link_to '‚úï', products_path,
                class: 'close-modal btn-link',
                data: { action: "modal#close" } %>

    <!-- Contr√¥leurs Stimulus : price + color -->
    <div class="product-show"
         data-controller="price color"
         data-colors="<%= @product.color_options.to_json %>">

      <!-- üñºÔ∏è Colonne gauche -->
      <div class="left-col">
        <%= image_tag @product.display_image,
                      alt: @product.name,
                      class: "modal-product-image",
                      id: "product-main-image",
                      data: { color_target: "mainImage" } %>

        <h2 class="product-title"><%= @product.name %></h2>

        <%# === Prix affich√© === %>
        <% if @product.is_roses? && @product.price_options.present? %>
          <p class="product-price"
             data-price-target="basePrice"
             data-base="<%= @product.min_price_cents %>">
            √Ä partir de <%= number_to_currency(@product.min_price_cents / 100.0, unit: "‚Ç¨") %>
          </p>
        <% elsif @product.customizable_price? && @product.price_options.present? %>
          <p class="product-price"
             data-price-target="basePrice"
             data-base="<%= @product.price_options.values.compact.min.to_i %>">
            √Ä partir de <%= number_to_currency(@product.price_options.values.compact.min.to_f / 100.0, unit: "‚Ç¨") %>
          </p>
        <% else %>
          <p class="product-price"
             data-price-target="basePrice"
             data-base="<%= @product.price_cents %>">
            <%= number_to_currency(@product.price_euros, unit: "‚Ç¨") %>
          </p>
        <% end %>
      </div>

      <!-- üßæ Colonne droite -->
      <div class="form-col">
        <%= form_with url: order_order_items_path(@order),
                      scope: :order_item,
                      local: true,
                      id: "add-to-cart-form",
                      data: { turbo: false } do |f| %>

          <%= f.hidden_field :product_id, value: @product.id %>

          <%# === S√©lecteur couleur (si applicable) === %>
          <% if @product.color_options.present? %>
            <div class="form-group">
              <label>Couleur :</label>
              <%= f.select :color,
                    options_for_select(
                      @product.color_options.is_a?(Hash) ? @product.color_options.keys : @product.color_options.split(",").map(&:strip)
                    ),
                    { prompt: "Choisissez une couleur" },
                    class: "form-control",
                    data: { action: "change->color#updateImage", color_target: "select" } %>
            </div>
          <% end %>

          <%# === Roses === %>
          <% if @product.is_roses? && @product.price_options.present? %>
            <label>Nombre de roses (par bouquet) :</label>
            <%= f.select :size,
                  options_for_select(
                    @product.price_options.map { |label, cents|
                      ["#{label} ‚Äî #{number_to_currency(cents.to_f / 100.0, unit: '‚Ç¨')}", label, { "data-price": cents }]
                    },
                    f.object.respond_to?(:size) ? f.object.size : nil
                  ),
                  {},
                  class: "form-control",
                  id: "quantity_select",
                  data: { action: "change->price#update", price_target: "budgetSelect" } %>

            <%# üåø Options sp√©cifiques aux roses (sauf Avalanche) %>
            <% if @product.variety != "avalanche" %>
              <label>Options :</label>
              <div class="addon-option">
                <%= check_box_tag "order_item[addons][]", "Gypsophile (+2‚Ç¨)", false,
                      id: "addon_gypsophile",
                      data: { action: "change->price#update", price_value: 200 } %>
                <%= label_tag "addon_gypsophile", "Avec 1 branche de gypsophile (+2‚Ç¨)" %>
              </div>

              <div class="addon-option">
                <%= check_box_tag "order_item[addons][]", "Eucalyptus (+3,50‚Ç¨)", false,
                      id: "addon_eucalyptus",
                      data: { action: "change->price#update", price_value: 350 } %>
                <%= label_tag "addon_eucalyptus", "Avec feuillage eucalyptus (+3,50‚Ç¨)" %>
              </div>
            <% end %>

          <%# === Autres cat√©gories === %>
          <% else %>
            <% if @product.size_list.present? && !["Coussin Coeur", "Dessus de Cercueil"].include?(@product.name) %>
              <label>Taille :</label>
              <%= f.select :size, options_for_select(@product.size_list), {}, class: "form-control" %>
            <% end %>
          <% end %>

          <%# === Produits personnalisables === %>
          <% if @product.customizable_price? && !["Coussin Coeur", "Dessus de Cercueil"].include?(@product.name) %>
            <label>Choisissez votre budget :</label>
            <%= f.select :size,
                  options_for_select(
                    @product.price_options.map { |label, cents|
                      ["#{label} (#{number_to_currency(cents.to_f / 100.0, unit: "‚Ç¨")})", label, { "data-price": cents }]
                    },
                    f.object.respond_to?(:size) ? f.object.size : nil
                  ),
                  { prompt: "S√©lectionnez un montant" },
                  class: "form-control",
                  data: { action: "change->price#update", price_target: "budgetSelect" } %>
          <% end %>

          <%# === Option sp√©ciale Bouquet bulle d‚Äôeau === %>
          <% if @product.name == "Bouquet rond" %>
            <div class="addon-option">
              <%= check_box_tag "order_item[addons][]", "Bouquet bulle (+4,50‚Ç¨)", false,
                    id: "addon_bulle",
                    data: { action: "change->price#update", price_value: 450 } %>
              <%= label_tag "addon_bulle", "Bouquet bulle (+4,50‚Ç¨)" %>
            </div>
          <% end %>

          <%# === Carte message & ruban === %>
          <% if @product.category.in?(%w[compositions roses plantes]) %>
            <div data-controller="addon">
              <label>Carte message (+1,50‚Ç¨) :</label>
              <%= f.check_box :addon_card,
                    { data: { action: "change->addon#toggleCard price#update", price_value: 150 } },
                    "true", "false" %>

              <div data-addon-target="cardFields" class="hidden fade-in">
                <%= f.select :addon_card_type,
                      options_for_select([
                        "Joyeux anniversaire", "Heureux anniversaire", "Heureux mariage",
                        "F√©licitations", "Bapteme", "Bonne Fete", "Je t'aime",
                        "Sinc√®res Condol√©ances", "Plaisir d'offrir", "Merci"
                      ]),
                      {}, class: "form-control" %>

                <%= f.text_area :addon_card_text,
                      placeholder: "Votre message...",
                      class: "form-control" %>
              </div>
            </div>

          <% elsif @product.category == "deuil" %>
            <div data-controller="addon">
              <label>Carte message (+1,50‚Ç¨) :</label>
              <%= f.check_box :addon_card,
                    { data: { action: "change->addon#toggleCard price#update", price_value: 150 } },
                    "true", "false" %>

              <div data-addon-target="cardFields" class="hidden fade-in">
                <%= f.text_area :addon_card_text, placeholder: "Votre message...", class: "form-control" %>
              </div>
            </div>

            <div data-controller="addon">
              <label>Ruban deuil (+7‚Ç¨) :</label>
              <%= f.check_box :addon_ruban,
                    { data: { action: "change->addon#toggleCard price#update", price_value: 700 } },
                    "true", "false" %>

              <div data-addon-target="cardFields" class="hidden fade-in">
                <%= f.text_area :addon_ruban_text, placeholder: "Texte du ruban...", class: "form-control" %>
              </div>
            </div>
          <% end %>

          <%# === Quantit√© & Total === %>
          <label>Quantit√© :</label>
          <%= f.number_field :quantity,
                value: 1, min: 1, class: "form-control",
                data: { price_target: "quantity", action: "input->price#update" } %>

          <p class="total-price-box">
            <strong>Total :</strong>
            <span data-price-target="totalPrice"></span>
          </p>

          <div class="fixed-button">
            <%= f.submit "Ajouter au panier", class: "btn btn-primary" %>
          </div>
        <% end %>

        <%# === Actions apr√®s ajout === %>
        <div id="post-add-to-cart-actions" class="modal-actions hidden">
          <%= link_to 'Voir mon panier',
                      checkout_order_path(current_order),
                      class: 'btn btn-secondary' %>

          <%= link_to 'Continuer mes achats',
                      products_path,
                      class: 'btn btn-outline' %>
        </div>
      </div> <!-- /.form-col -->
    </div> <!-- /.product-show -->
  </div> <!-- /.modal-content -->
</div> <!-- /.modal-overlay --> <!-- /.modal-overlay --> <!-- /.modal-overlay --> <!-- /.modal-overlay -->

<script>
document.addEventListener("turbo:load", () => {
  const modal = document.getElementById("product-modal");
  const closeBtn = document.querySelector(".close-modal");
  const form = document.getElementById("add-to-cart-form");
  const postActions = document.getElementById("post-add-to-cart-actions");
  const cartCounter = document.getElementById("cart-counter");

  // Fermer modale
  closeBtn.addEventListener("click", (e) => {
    e.preventDefault();
    window.location.href = "<%= products_path %>";
  });

  modal.addEventListener("click", (e) => {
    if (e.target === modal) {
      window.location.href = "<%= products_path %>";
    }
  });

  // ‚úÖ Mettre √† jour prix quand on change le nombre de roses
  const qtySelect = document.getElementById("quantity_select");
  const priceEl = document.querySelector(".product-price");

  if (qtySelect && priceEl) {
    qtySelect.addEventListener("change", (e) => {
      const option = e.target.selectedOptions[0];
      if (option && option.textContent.includes("‚Ç¨")) {
        priceEl.textContent = option.textContent.split("‚Äî")[1].trim();
      }
    });
  }

  // ‚úÖ Envoi AJAX du formulaire
  if (form) {
    form.addEventListener("submit", (e) => {
      e.preventDefault();
      const formData = new FormData(form);

      fetch(form.action, {
        method: "POST",
        body: formData,
        headers: {
          "X-Requested-With": "XMLHttpRequest",
          "Accept": "application/json"
        }
      })
      .then(response => {
        if (!response.ok) throw new Error("HTTP error " + response.status);
        return response.json();
      })
      .then(data => {
        if (data.success) {
          postActions.classList.remove("hidden");
          if (cartCounter) cartCounter.textContent = data.cart_item_count;
          // ‚úÖ rien d‚Äôautre, pas d‚Äôalert
        }
        // ‚ùå on ne met pas de else pour √©viter un alert
      })
      .catch((err) => {
        console.error(err); // log silencieux dans la console
      });
    });
  }
});
document.addEventListener("turbo:load", () => {
  const form = document.getElementById("add-to-cart-form");
  const postActions = document.getElementById("post-add-to-cart-actions");

  if (form) {
    form.addEventListener("submit", (e) => {
      e.preventDefault(); // ‚õî emp√™che le rechargement
      setTimeout(() => {
        alert("‚úÖ Produit ajout√© au panier !");
        if (postActions) postActions.classList.remove("hidden");
      }, 200);
    });
  }
});
</script>
