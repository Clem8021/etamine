<div class="modal-overlay" data-controller="modal" id="product-modal">
  <div class="modal-content">
    <%= link_to '✕', products_path,
                class: 'close-modal btn-link',
                data: { action: "modal#close" } %>

    <div class="product-show">
      <!-- Colonne gauche -->
      <div class="left-col">
        <%= image_tag @product.display_image, alt: @product.name, class: "modal-product-image" %>
        <h2 class="product-title"><%= @product.name %></h2>

        <% if @product.is_roses? && @product.price_options.present? %>
          <p class="product-price">
            À partir de <%= number_to_currency(@product.min_price_cents / 100.0, unit: "€") %>
          </p>
        <% elsif @product.customizable_price? && @product.price_options.present? %>
          <p class="product-price">
            À partir de <%= number_to_currency(@product.price_options.values.compact.min.to_f / 100.0, unit: "€") %>
          </p>
        <% else %>
          <p class="product-price"><%= number_to_currency(@product.price_euros, unit: "€") %></p>
        <% end %>
      </div>

      <!-- Colonne droite -->
      <div class="form-col">
        <%= form_with url: order_order_items_path(@order),
              scope: :order_item,
              local: true,
              id: "add-to-cart-form",
              data: { turbo: false } do |f| %>

          <%= f.hidden_field :product_id, value: @product.id %>

          <% if @product.is_roses? %>

            <!-- Nombre de roses -->
            <% if @product.available_quantities.present? %>
              <label>Nombre de roses :</label>
              <%= f.select :size,
                    options_for_select(@product.available_quantities.map { |q|
                      ["#{q} — #{number_to_currency(@product.price_for(q) / 100.0, unit: '€')}", q]
                    }),
                    {},
                    class: "form-control",
                    id: "quantity_select" %>
            <% end %>

            <!-- Options spécifiques roses -->
            <label>Options :</label>
            <div class="addon-option">
              <%= check_box_tag "order_item[addons][]", "Gypsophile (+2€)", false, id: "addon_gypsophile" %>
              <%= label_tag "addon_gypsophile", "Avec 1 branche de gypsophile (+2€)" %>
            </div>
            <div class="addon-option">
              <%= check_box_tag "order_item[addons][]", "Eucalyptus (+3,50€)", false, id: "addon_eucalyptus" %>
              <%= label_tag "addon_eucalyptus", "Avec feuillage eucalyptus (+3,50€)" %>
            </div>
          <% else %>
            <!-- Autres produits -->
            <% if @product.color_list.present? %>
              <label>Couleur :</label>
              <%= f.select :color, options_for_select(@product.color_list), {}, class: "form-control" %>
            <% end %>

            <% if @product.size_list.present? %>
              <label>Taille :</label>
              <%= f.select :size, options_for_select(@product.size_list), {}, class: "form-control" %>
            <% end %>

            <% if @product.addon_list.present? %>
              <label>Options :</label>
              <% @product.addon_list.each do |addon| %>
                <div>
                  <%= check_box_tag "order_item[addons][]", addon, false, id: "order_item_addons_#{addon.parameterize}" %>
                  <%= label_tag "order_item_addons_#{addon.parameterize}", addon %>
                </div>
              <% end %>
            <% end %>
          <% end %>

          <!-- ✅ Cas spécial : bouquets & deuil avec budget personnalisable -->
          <% if @product.customizable_price? %>
            <label>Choisissez votre budget :</label>
           <%= f.select :size,
                options_for_select(
                  @product.price_options.map { |label, cents|
                    ["#{label} (#{number_to_currency(cents/100.0, unit: "€")})", label]
                  },
                  f.object.respond_to?(:size) ? f.object.size : nil
                ),
                { prompt: "Sélectionnez un montant" },
                class: "form-control" %>
          <% end %>

          <!-- ✅ Ventes additionnelles -->
          <% if @product.category.in?(%w[compositions roses plantes]) %>
            <label>Carte message (+1,50€) :</label>
            <%= f.check_box :addon_card, {}, "true", "false" %>
            <%= f.select :addon_card_type,
                  options_for_select([
                    "Joyeux anniversaire", "Heureux anniversaire", "Heureux mariage",
                    "Félicitations", "Bapteme", "Bonne Fete", "Je t'aime",
                    "Sincères Condoléances", "Plaisir d'offrir", "Merci"
                  ]),
                  {}, class: "form-control" %>
            <%= f.text_area :addon_card_text, placeholder: "Votre message...", class: "form-control" %>
          <% elsif @product.category == "deuil" %>
            <label>Carte message (+1,50€) :</label>
            <%= f.check_box :addon_card, {}, "true", "false" %>
            <%= f.text_area :addon_card_text, placeholder: "Votre message...", class: "form-control" %>

            <label>Ruban deuil (+7€) :</label>
            <%= f.check_box :addon_ruban, {}, "true", "false" %>
            <%= f.text_area :addon_ruban_text, placeholder: "Texte du ruban...", class: "form-control" %>
          <% end %>

          <!-- Quantité d’articles -->
          <label>Quantité :</label>
          <%= f.number_field :quantity, value: 1, min: 1, class: "form-control" %>

          <div class="fixed-button">
            <%= f.submit "Ajouter au panier", class: "btn btn-primary" %>
          </div>
        <% end %>

        <!-- Actions après ajout -->
        <div id="post-add-to-cart-actions" class="modal-actions hidden">
          <%= link_to 'Voir mon panier', cart_path, class: 'btn btn-secondary' %>
          <%= link_to 'Continuer mes achats', products_path, class: 'btn btn-outline' %>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Script -->
<script>
document.addEventListener("turbo:load", () => {
  const modal = document.getElementById("product-modal");
  const closeBtn = document.querySelector(".close-modal");
  const form = document.getElementById("add-to-cart-form");
  const postActions = document.getElementById("post-add-to-cart-actions");
  const cartCounter = document.getElementById("cart-counter");

  // Fermer modale
  closeBtn.addEventListener("click", (e) => {
    e.preventDefault();
    window.location.href = "<%= products_path %>";
  });

  modal.addEventListener("click", (e) => {
    if (e.target === modal) {
      window.location.href = "<%= products_path %>";
    }
  });

  // ✅ Mettre à jour prix quand on change le nombre de roses
  const qtySelect = document.getElementById("quantity_select");
  const priceEl = document.querySelector(".product-price");

  if (qtySelect && priceEl) {
    qtySelect.addEventListener("change", (e) => {
      const option = e.target.selectedOptions[0];
      if (option && option.textContent.includes("€")) {
        priceEl.textContent = option.textContent.split("—")[1].trim();
      }
    });
  }

  // ✅ Envoi AJAX du formulaire
  if (form) {
    form.addEventListener("submit", (e) => {
      e.preventDefault();
      const formData = new FormData(form);

      fetch(form.action, {
        method: "POST",
        body: formData,
        headers: {
          "X-Requested-With": "XMLHttpRequest",
          "Accept": "application/json"
        }
      })
      .then(response => {
        if (!response.ok) throw new Error("HTTP error " + response.status);
        return response.json();
      })
      .then(data => {
        if (data.success) {
          postActions.classList.remove("hidden");
          if (cartCounter) cartCounter.textContent = data.cart_item_count;
          // ✅ rien d’autre, pas d’alert
        }
        // ❌ on ne met pas de else pour éviter un alert
      })
      .catch((err) => {
        console.error(err); // log silencieux dans la console
      });
    });
  }
});
document.addEventListener("turbo:load", () => {
  const form = document.getElementById("add-to-cart-form");
  const postActions = document.getElementById("post-add-to-cart-actions");

  if (form) {
    form.addEventListener("submit", (e) => {
      e.preventDefault(); // ⛔ empêche le rechargement
      setTimeout(() => {
        alert("✅ Produit ajouté au panier !");
        if (postActions) postActions.classList.remove("hidden");
      }, 200);
    });
  }
});
</script>
